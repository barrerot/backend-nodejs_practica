<%- include('head', {title: title}) %>

<body>
    <%- include('header') %>
    
    <div >

<h1>Nodepop</h1>
Esta API ha sido Consiste en un backend construido con Express, NodeJS y MongoDB.
<h2>Install</h2>
Install dependencies:

$ <code>npm install</code>
Review database connection on /lib/connectMongoose.js (see "Start a MongoDB Server in MacOS or Linux")

<h2>Load initial data:</h2>
this command deletes all the data in the database and create default data
$ <code>npm run init-db</code>
<h2>Start</h2>
In production:<br>

<code>npm start</code>
In development:<br>

<code>npm run dev</code>


<h2>Parámetros de consulta</h2>
Cualquier solicitud de acceso a los anuncios almacenados puede efectuarse a través de dos métodos diferentes:

Realizar consultas directas mediante una URL, lo que resultará en una página con los anuncios filtrados.
Realizar consultas a la API como un servicio, lo que generará un archivo JSON como respuesta.
Ambas vías de consulta admiten los mismos parámetros. Un ejemplo de consulta seria:

<code>
localhost:3000/anuncios?type=compra&type=venta&tags=work&range=10-100&limit=3&skip=3&sort=nombre</code>
Los parámetros aceptados son:
<ul>
<li><b>Name</b>: El nombre de un artículo. No distingue minúsculas de mayúsculas.</li>
<li></li><b>Tags</b>: El nombre de un tag o categoría.</li>
<li></li><b>Type</b>: Venta o Compra según el tipo de anuncio.</li>
<li></li><b>Range</b>: Precio mínimo y máximo separado por un guión.</li>
<li></li><b>Limit</b>: Número máximo de anuncios a devolver.</li>
<li></li><b>Skip</b>: Número de anuncios a saltar. En caso de paginación.</li>
<li></li><b>Sort</b>: Campo por el cual se ordena . si ponemos un meno de lante el orden es descendente</li>
</ul>
<h2>END points </h2>
<h2>GET /api/anuncios/</h2>
<h2>POST /api/anuncios/</h2>
Introduce un nuevo artículo
hay que pasarle los datos en el body con formatodata-urlencode

ejemplo de un curl 
curl --location 'http://localhost:3000/api/anuncios' \
--header 'Content-Type: application/x-www-form-urlencoded' \
--data-urlencode 'nombre=Bicicleta' \
--data-urlencode 'venta=true' \
--data-urlencode 'precio=230.15' \
--data-urlencode 'foto=bici.jpg' \
--data-urlencode 'tags=["lifestyle", "motor"]'


Devuelve un JSON con el anuncio insertado
<h2>GET /api/anuncios/tags</h2>
    Devuelve un JSON  con todos los tags de los anuncios
    Por ejemplo: http://localhost:3000/api/anuncios/tags

    Devuelve un json
    <code>
    {"success":true,"result":["lifestyle","motor","work","tech","joyeria"]}
</code>

    </div>


    <%- include('footer') %>
</body>

</html>